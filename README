Q: Why named sloth?
A: An animal, just pick from film of Ice Age.

tree
====
cpu-- idle -- {count:32}
      sytem -- {count:29}
      user--{count:900, marker:text}



directory layout
================
# agent
agent/
agent/modules/*.py *.so
agent/conf/*.conf *.on *.off
agent/agent.conf

setup.py
easy_install | pip install 
big [egg|zip] with pip and dependence packages ...


# server
server/
  main.py
  tree.py => async store in trend db
  treedb.py
  pushviahttp.py
  pushviasocket.py
  
server/pipes/*.py
server/web
  web/pages.py
  web/trend.py
server/web/static/*.js *.css *.html
server/web/templates/*.html
server/graph
server/graph/styles.py
  cpu|net|url|default
  input: tree
    bar|line|x-axis|marker range,picture|theme...|format
  output: png|pdf


# relay server
--relay
? agent/conf/relay.conf


url map
=======
/push
  form field support json/accesslog
  json => merge into core tree
  accesslog => pipes => tree => merge into core tree

/pull/?key=br
/pull/?key=br,ie
/pull/?key=br,ie,7
  comet, repsonse in json list
    [{br,ie,7 : 2328},
    {br,ie,sogou,3 : 323}]
/get/?key=br,ie,7
  response immediatly in json list
/realtime/view/name
  view by name, per user's specify

/trend/view/ [default in one year]
  left tree | right (multi) js graph (zoomable highcharts/examples/dynamic-master-detail.htm)
/trend/view/name?
  one js graph
  add compare | zoomable | setting style ...
/setting/view
  add | remove view


/diff/keya/keyb
/graph




server push
===========
udp
tcp
http post in form

socket
======



modules
=======
web access log(raw)
nginx stats
network traffic(bytes, same as gangalia)
url(time to first byte, status code, bytes, ...)
? cpu/load

? python modules/*.py --check --test ....



pipes
======
web access log
  browser type  => tree
  os type       => tree
  upstream time  => tree
  request time
  response bytes
  url count
  error count
  ? geo


# interval
agent push
pipe process

 m = import pipes.ua
 m.init()